@using CIS229_Lab4_MMJ.Models;
@model RideIndexModel

@{
    ViewBag.Title = "Index";
}

<h2>Looking for specific criteria? Search Rides now!</h2>


@using (Html.BeginForm("Search", "Ride", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Select a campus and day of the week here:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCampusId, "Campus", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedCampusId, Model.Campuses, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedCampusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaysOfWeek, "Day Of The Week", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(d => d.SelectedDayOfWeek, Model.DaysOfWeek, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DaysOfWeek, "", new { @class = "text-danger" })
            </div>
        </div>
     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().Campus.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().StudentEmail)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().StartingCrossroads)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().StartingTown)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().DayOfWeek)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().TimeStart)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rides.First().TimeEnd)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Rides)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Campus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingCrossroads)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingTown)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DayOfWeek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeEnd)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.RideId }) |
                @Html.ActionLink("Details", "Details", new { id = item.RideId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.RideId })
            </td>
        </tr>
    }

</table>
